# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-24 09:25
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseServiceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Process identifier', primary_key=True, serialize=False)),
                ('type', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('aoi', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=[], null=True)),
                ('toi', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=[], null=True)),
                ('input_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('output_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='processes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Process',
                'verbose_name_plural': 'Processes',
                'db_table': 'process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rasterbucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now_add=True)),
                ('raster_data', models.FileField(blank=True, upload_to='geebridge')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='rasterbuckets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RasterbucketService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now_add=True)),
                ('done', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rasterbucket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='api.Rasterbucket')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GEEMapService',
            fields=[
                ('baseservicemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.BaseServiceModel')),
                ('mapid', models.CharField(max_length=255, unique=True)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('hashid', models.UUIDField(default=uuid.uuid4)),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('api.baseservicemodel',),
        ),
        migrations.CreateModel(
            name='TileMapService',
            fields=[
                ('baseservicemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.BaseServiceModel')),
                ('friendly_name', models.CharField(blank=True, max_length=255)),
                ('geemap', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geemap', to='api.GEEMapService')),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('api.baseservicemodel',),
        ),
        migrations.AddField(
            model_name='baseservicemodel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='baseservicemodel',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.baseservicemodel_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='baseservicemodel',
            name='rasterbucketservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='api.RasterbucketService'),
        ),
    ]
